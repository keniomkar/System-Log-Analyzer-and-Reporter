#log_report.py
#This script reads filtered logs and generate a summary report
#It counts occurance of errors and warnings

import datetime     #for timestamping the report

input_file = "filtered_logs.txt"   #file generated by bash script in log_collector.sh
output_file = "log_report.txt"     #stores summary report

summary = {"ERROR":0, "WARNING":0}  #using dictionary bcz it will be easier to loop

try:
    with open(input_file,"r") as file:
        for line in file:
            #check if line contain error (case insensitive)
            if "error" in line.lower(): 
                summary["ERROR"] += 1
                
            #check if line contain warning (case insensitive)   
            elif "warning" in line.lower():
                summary["WARNING"] += 1
except FileNotFoundError:   #this will be printed if file not exist
    print(f"{input_file} not found.")
    exit(1)
    

#Writing the Summary report
with open(output_file, "w") as file:   #log_report.txt is created
    file.write("System Log Summary Report\n")
    file.write(f"Generated on: {datetime.datetime.now()}\n\n")  #Timestamp(current date)
    
    #Writing how many times error and warnings occured
    for key, value in summary.items():
        file.write(f"{key}: {value} occurrences\n")

# informing user that log_report.txt file is created       
print(f"Report generated: {output_file}")  
